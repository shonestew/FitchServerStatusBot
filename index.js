const fs = require('fs');
const TelegramBot = require('node-telegram-bot-api');
const mcs = require('node-mcstatus');
const token = '7380107503:AAFbPffkeyIvkxOqSfGCWL2IgS9YE_U0R9U'
const bot = new TelegramBot(token, {
	polling: true
});
const chatServersFile = 'chat_servers.json';

function loadChatServers() {
	try {
		const data = fs.readFileSync(chatServersFile);
		return JSON.parse(data);
	} catch (err) {
		console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ —á–∞—Ç–æ–≤:', err);
		return {};
	}
}

function saveChatServers(data) {
	fs.writeFileSync(chatServersFile, JSON.stringify(data, null, 2));
}
bot.on('polling_error', (error) => {
	console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø—É–ª–ª–∏–Ω–≥–æ–º:', error);
});
bot.on('message', (msg) => {
	if (msg.chat.type == 'private') {
		bot.sendMessage(msg.chat.id, 'üîê –≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö/–≥—Ä—É–ø–ø–∞—Ö!\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"–î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Å—Ç (–∞–π–ø–∏) (–ø–æ—Ä—Ç)" - –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä –≤ —Å–ø–∏—Å–æ–∫(—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞).\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è - "–î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Å—Ç example.com 19132".\n"–°–µ—Ä–≤–µ—Ä –æ–Ω–ª–∞–π–Ω?" - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞.\n"–£–¥–∞–ª–∏—Ç—å —Ö–æ—Å—Ç" - —É–¥–∞–ª—è–µ—Ç —Ö–æ—Å—Ç(—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)')
	}
})
bot.onText(/–î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Å—Ç (.+) (\d+)/, async (msg, match) => {
	bot.getChatMember(msg.chat.id, msg.from.id).then(function(data) {
		if ((data.status == "creator") || (data.status == "administrator")) {
			const chatServers = loadChatServers();
			const chatId = msg.chat.id;
			const host = match[1];
			const port = parseInt(match[2]);
			try {
				mcs.statusBedrock(host, port).then((result) => {
					if (result.online == true || result.online == false) {
						if (!chatServers[chatId]) {
							chatServers[chatId] = [];
							chatServers[chatId] = {
								host,
								port
							};
							saveChatServers(chatServers);
							bot.sendMessage(chatId, `‚úÖ –°–µ—Ä–≤–µ—Ä —Å –∞–π–ø–∏-–∞–¥—Ä–µ—Å–æ–º: ${host}, –∏ –ø–æ—Ä—Ç–æ–º: ${port} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`);
							return;
						} else {
							bot.sendMessage(chatId, '‚ùå –≠—Ç–æ—Ç —á–∞—Ç —É–∂–µ –∏–º–µ–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä!');
							return;
						}
					}
				});
			} catch (error) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
				bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–∞.');
			}
		} else {
			bot.sendMessage(msg.chat.id, 'üîê –í–∞–º –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ')
		}
	});
});
bot.onText(/–°—Ç–∞—Ç—É—Å/, async (msg) => {
const chatServers = loadChatServers();
const chatId = msg.chat.id.toString();
if (!chatServers[chatId]) {
	bot.sendMessage(chatId, '‚ùå –í—ã –∑–∞–±—ã–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å IP-–∞–¥—Ä–µ—Å –∏ –ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞!');
	return;
}
const {
	host,
	port
} = chatServers[chatId];
try {
	mcs.statusBedrock(host, port).then((res) => {
		if (res.online == true) {
			bot.sendMessage(chatId, `‚úÖ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ - –≤–∫–ª—é—á–µ–Ω!\nüì° –ê–π–ø–∏-–∞–¥—Ä–µ—Å: ${host}, –ø–æ—Ä—Ç: ${port}\nüë• –ò–≥—Ä–æ–∫–∏ –≤ —Å–µ—Ç–∏: ${res.players.online}/${res.players.max}.`);
		} else {
			bot.sendMessage(chatId, '‚ùå –°–µ—Ä–≤–µ—Ä –æ—Ç–∫–ª—é—á—ë–Ω!');
		}
	});
} catch (error) {
	console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
	bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞.');
}
});
});
bot.onText(/–£–¥–∞–ª–∏—Ç—å —Ö–æ—Å—Ç/, async (msg) => {
	bot.getChatMember(msg.chat.id, msg.from.id).then(function(data) {
		if ((data.status == "creator") || (data.status == "administrator")) {
			const chatId = msg.chat.id.toString();
			const chatServers = loadChatServers();
			if (!chatServers[chatId]) {
				bot.sendMessage(chatId, '‚ùå –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.');
				return;
			}
			delete chatServers[chatId];
			saveChatServers(chatServers);
			bot.sendMessage(chatId, '‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞.');
		} else {
			bot.sendMessage(msg.chat.id, 'üîê –í–∞–º –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ')
		}
	});
});
bot.onText(/–ü–æ–º–æ—â—å/, async (msg) => {
	bot.sendMessage(msg.chat.id, 'üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"–î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Å—Ç (–∞–π–ø–∏) (–ø–æ—Ä—Ç)" - –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä –≤ —Å–ø–∏—Å–æ–∫(—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞).\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è - "–î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Å—Ç example.com 19132".\n"–°–µ—Ä–≤–µ—Ä –æ–Ω–ª–∞–π–Ω?" - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞.\n"–£–¥–∞–ª–∏—Ç—å —Ö–æ—Å—Ç" - —É–¥–∞–ª—è–µ—Ç —Ö–æ—Å—Ç(—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)')
});
console.log('–ë–æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–ª, –µ–±–∞—Ç—å.')
